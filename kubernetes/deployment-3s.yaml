apiVersion: v1
kind: Namespace
metadata:
  name: <APP_NAMESPACE>
  
---
apiVersion: v1
kind: Secret
metadata:
  name: <APP_NAME>-secret
  namespace: <APP_NAMESPACE>
type: Opaque
data:
  DB_PASSWORD: M3MhQCMkMjAyMw==
  DB_PASSWORD_SIGAA: KytFbjNyR2lA
  MAIL_PASSWORD: ''

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: <APP_NAME>-config
  namespace: <APP_NAMESPACE>
  labels:
    app: <APP_NAME>
data:
  # defaults
  TZ: 'America/Fortaleza'
  # 3s
  DB_CONNECTION: 'pgsql'
  DB_HOST: 'postgres.postgres-3s.svc.cluster.local'
  DB_PORT: '5432'
  DB_DATABASE: '3s-ocorrencias'
  DB_USERNAME: '3s'
  # sigaa
  DB_CONNECTION_SIGAA: 'pgsql'
  DB_HOST_SIGAA: '10.129.19.31'
  DB_PORT_SIGAA: '5432'
  DB_DATABASE_SIGAA: 'sistemas_comum'
  DB_USERNAME_SIGAA: '3s'
  # smtp
  MAIL_MAILER: 'smtp'
  MAIL_HOST: 'smtp.noreply.unilab.edu.br'
  MAIL_PORT: '25'
  MAIL_USERNAME: ''
  MAIL_ENCRYPTION: ''
  MAIL_FROM_ADDRESS: '3s@noreply.unilab.edu.br'
  MAIL_FROM_NAME: '3S - Sistema de Solicitacao de Ocorrencias'

  # Laravel Default
  APP_NAME: 'Laravel'
  APP_ENV: 'local'
  APP_KEY: 'base64:ZG55aXZleG8yOXk4ZGhkNnVoeWYxMnpjN2VhcHBibG0='
  APP_DEBUG: 'false'
  APP_URL: 'http://dti-app-test-c1.unilab.edu.br'
  # a
  LOG_CHANNEL: 'stack'
  LOG_DEPRECATIONS_CHANNEL: 'null'
  LOG_LEVEL: 'error'
  # b
  BROADCAST_DRIVER: 'log'
  CACHE_DRIVER: 'file'
  FILESYSTEM_DISK: 'local'
  QUEUE_CONNECTION: 'sync'
  SESSION_DRIVER: 'file'
  SESSION_LIFETIME: '120'
  # c
  MEMCACHED_HOST: '127.0.0.1'
  # d
  REDIS_HOST: '127.0.0.1'
  REDIS_PASSWORD: 'null'
  REDIS_PORT: '6379'
  # e
  AWS_ACCESS_KEY_ID: ''
  AWS_SECRET_ACCESS_KEY: ''
  AWS_DEFAULT_REGION: 'us-east-1'
  AWS_BUCKET: ''
  AWS_USE_PATH_STYLE_ENDPOINT: 'false'
  # f
  PUSHER_APP_ID: ''
  PUSHER_APP_KEY: ''
  PUSHER_APP_SECRET: ''
  PUSHER_HOST: ''
  PUSHER_PORT: '443'
  PUSHER_SCHEME: 'https'
  PUSHER_APP_CLUSTER: 'mt1'
  # g
  VITE_PUSHER_APP_KEY: '${PUSHER_APP_KEY}'
  VITE_PUSHER_HOST: '${PUSHER_HOST}'
  VITE_PUSHER_PORT: '${PUSHER_PORT}'
  VITE_PUSHER_SCHEME: '${PUSHER_SCHEME}'
  VITE_PUSHER_APP_CLUSTER: '${PUSHER_APP_CLUSTER}'

---
# kubectl create secret docker-registry registro-regcred --docker-server=https://dti-registro.unilab.edu.br --docker-username=desenvolvedor --docker-password=Desenvolvedor2023 --docker-email=dti-registro@noreply.unilab.edu.br --output yaml
# kubectl get secret registro-regcred --output=yaml
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2R0aS1yZWdpc3Ryby51bmlsYWIuZWR1LmJyIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6IkR0aUB1bmlsYWIyMDIzIiwiZW1haWwiOiJkaXNpckB1bmlsYWIuZWR1LmJyIiwiYXV0aCI6IllXUnRhVzQ2UkhScFFIVnVhV3hoWWpJd01qTT0ifX19
kind: Secret
metadata:
  name: registro-regcred
  namespace: <APP_NAMESPACE>
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-<APP_NAME>
  namespace: <APP_NAMESPACE>
  labels:
    app: <APP_NAME>
spec:
  storageClassName: nfs-storage-k8s
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <APP_NAME>
  namespace: <APP_NAMESPACE>
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: <APP_NAME>
    spec:
      containers:
      - name: <CONTAINER_NAME>
        image: <IMAGE_TAG>
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        - containerPort: 37389
          name: ssh
        envFrom:
          - secretRef:
              name: <APP_NAME>-secret
          - configMapRef:
              name: <APP_NAME>-config
        volumeMounts:
        - name: tz-america
          mountPath: /etc/localtime
        - name: 3s-uploads
          mountPath: /var/www/html/public/uploads
      volumes:
        - name: tz-america
          hostPath:
            path: /usr/share/zoneinfo/America/Fortaleza
            type: File
        - name: 3s-uploads
          persistentVolumeClaim:
            claimName: pvc-<APP_NAME>
      imagePullSecrets:
      - name: registro-regcred
  selector:
    matchLabels:
        app: <APP_NAME>
---
apiVersion: v1
kind: Service
metadata:
  name: <APP_NAME>
  namespace: <APP_NAMESPACE>
  labels:
    app: <APP_NAME>
  annotations:
    metallb.universe.tf/address-pool: int-pool
spec:
  selector:
    app: <APP_NAME>
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
    - protocol: TCP
      port: 37389
      targetPort: 37389
      name: ssh
  type: LoadBalancer
  loadBalancerIP: 10.130.0.153
  externalTrafficPolicy: Local
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
   name: <APP_NAME>
   namespace: <APP_NAMESPACE>
   annotations:
      haproxy.org/check: enabled
      haproxy.org/forwarded-for: enabled
      haproxy.org/load-balance: roundrobin
      haproxy.org/ssl-redirect: 'true'
      haproxy.org/ssl-redirect-code: '301'
spec:
  rules:
    - host: dti-app-test-c1.unilab.edu.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                  name: <APP_NAME>
                  port:
                     number: 80
                     