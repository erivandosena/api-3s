---
apiVersion: v1
kind: Namespace
metadata:
  name: postgres-3s

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-3s-config
  namespace: postgres-3s
  labels:
    app: postgres
data:
  PG_USER: "3s"
  PG_PRIMARY_USER: primary
  PGHOST: "/tmp"
  PG_MODE: "primary"
  PG_DATABASE: "3s-ocorrencias"
  PG_PRIMARY_HOST: "postgres.postgres-3s.svc.cluster.local"
  PG_PRIMARY_PORT: "5432"
  MODE: "postgres"
  CRUNCHY_DEBUG: "TRUE"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-postgres-3s
  namespace: postgres-3s
  labels:
    app: postgres
spec:
  storageClassName: nfs-storage-k8s
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgres-3s
  labels:
    app: postgres
  annotations:
    metallb.universe.tf/address-pool: int-pool
spec:
  type: LoadBalancer
  loadBalancerIP: 10.130.0.154
  externalTrafficPolicy: Local
  ports:
    - protocol: TCP
      port: 5432
      nodePort: 30100
      name: pgsql
  selector:
    app: postgres

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-3s-primary
  namespace: postgres-3s
  labels:
    name: postgres-3s-primary
spec:
  ports:
    - protocol: TCP
      port: 5432
      nodePort: 0
  selector:
    name: postgres-3s-primary
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-3s-replica
  namespace: postgres-3s
  labels:
    name: postgres-3s-replica
spec:
  ports:
    - protocol: TCP
      port: 5432
      nodePort: 0
  selector:
    name: postgres-3s-replica
  type: ClusterIP
  sessionAffinity: None

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-3s-sa
  namespace: postgres-3s
automountServiceAccountToken: true
imagePullSecrets:
  - name: app-3s-regcred

---
apiVersion: v1
kind: Secret
metadata:
 name: postgres
 namespace: postgres-3s
 annotations:
   kubernetes.io/service-account.name: postgres
type: kubernetes.io/service-account-token

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres-3s
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        name: postgres-3s-replica
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-inject-secret-config: 'secret/data/3s/config'
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "secret/data/3s/config" -}}
            export PG_USER='{{ .Data.data.pg_user }}'
            export PG_PASSWORD='{{ .Data.data.pg_password }}'
            export PG_PRIMARY_PASSWORD='{{ .Data.data.pg_primary_password }}'
            export PG_USER_ROOT='{{ .Data.data.pg_user_root }}'
            export PG_ROOT_PASSWORD='{{ .Data.data.pg_root_password }}'
            export DB_USER_DUMP='{{ .Data.data.db_user_dump }}'
            export DB_PASSWORD_DUMP='{{ .Data.data.db_password_dump }}'
            export PG_PASSWORD_HOMOLOGACAO='{{ .Data.data.db_password_staging }}'
          {{- end }} 
        vault.hashicorp.com/role: "3s-role"
        vault.hashicorp.com/auth-path: auth/kubernetes/c1
    spec:
      serviceAccount: postgres-3s-sa
      securityContext:
        fsGroup: 26
      containers:
        - name: postgres
          image: crunchydata/crunchy-postgres:centos8-13.6-4.7.5
          command: ["/bin/sh", "-c", "source /vault/secrets/config; /opt/crunchy/bin/start.sh"]
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 990m
              memory: 1024Mi
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-3s-config
          volumeMounts:
            - name: pgdata
              mountPath: /pgdata
              readOnly: false
      volumes:
        - name: postgresql-initdb
          configMap:
            name: postgres-3s-config
        - name: pgdata
          persistentVolumeClaim:
            claimName: pvc-postgres-3s
            