# docker-compose up --build -d
# docker-compose logs -f
# docker exec -it postgres /bin/bash
# docker cp postgres:/var/lib/postgresql/data/pgdata/pg_hba.conf ./postgres-conf/
# docker cp postgres:/var/lib/postgresql/data/pgdata/postgresql.conf ./postgres-conf/

version: '3.9'
services:
  ###################################
  # Application
  ###################################
  app:
    build: .
    image: 3s:latest
    container_name: 3s
    restart: always
    ports:
      - 8080:80
      - 37389:37389
    env_file:
      - .env
    volumes:
      - /tmp:/var/www/html/3s/public/uploads:rw
    networks:
      - dev
  ###################################
  # PostgreSQL
  ###################################
  postgresql:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgresql_data:/var/lib/postgresql/data/pgdata
      - ./source/postgres/postgresql.conf:/var/lib/postgresql/data/pgdata/postgresql.conf:rw
      - ./source/postgres/pg_hba.conf:/var/lib/postgresql/data/pgdata/pg_hba.conf:rw
    networks:
      - dev

  ###################################
  # PgAdmin4 - Tool para PostgreSQL
  ###################################
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - 8090:80
    env_file:
      - .env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./source/postgres/servers.json:/pgadmin4/servers.json:rw
    depends_on:
      - postgresql
    networks:
      - dev

volumes:
  postgresql_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
 dev:
   name: dev
   driver: bridge